name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      gateway-version: ${{ steps.package-version.outputs.current-version }}
      gateway-version-major: ${{ steps.semver_parser.outputs.major }}
      gateway-version-minor: ${{ steps.semver_parser.outputs.minor }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup Node@14.x
        uses: actions/setup-node@master
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'

      - name: Get Yarn cache
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-14-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-14-yarn-

      - name: Install dependencies
        run: yarn install && yarn build

      - name: Create Release Pull Request
        uses: changesets/action@master
        with:
          publish: yarn release
          commit: 'chore(release): update monorepo packages versions'
          title: 'Upcoming Release Changes'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current Gateway version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: packages/gateway

      - name: Parse semver Gateway version
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ steps.package-version.outputs.current-version }}

  dockerhub:
    name: Dockerhub
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: release
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_REGISTRY_USERNAME }}
          password: ${{ secrets.GH_REGISTRY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            gqlportal/gateway:latest
            gqlportal/gateway:0.x
            gqlportal/gateway:${{ needs.release.outputs.gateway-version }}
            gqlportal/gateway:${{ needs.release.outputs.gateway-version-major }}.${{ needs.release.outputs.gateway-version-minor }}.x
            ghcr.io/graphql-portal/graphql-portal-gateway:latest
            ghcr.io/graphql-portal/graphql-portal-gateway:0.x
            ghcr.io/graphql-portal/graphql-portal-gateway:${{ needs.release.outputs.gateway-version }}
            ghcr.io/graphql-portal/graphql-portal-gateway:${{ needs.release.outputs.gateway-version-major }}.${{ needs.release.outputs.gateway-version-minor }}.x

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
