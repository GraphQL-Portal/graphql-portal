(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[964],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),h=i,g=u["".concat(s,".").concat(h)]||u[h]||c[h]||o;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4415:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var a=n(2122),i=n(9756),o=(n(7294),n(3905)),r={id:"gateway-options",title:"Gateway configuration options",sidebar_label:"Gateway Config Options"},l=void 0,s={unversionedId:"configuration/gateway-options",id:"configuration/gateway-options",isDocsHomePage:!1,title:"Gateway configuration options",description:"Gateway Configuration File",source:"@site/docs/configuration/gateway-options.md",sourceDirName:"configuration",slug:"/configuration/gateway-options",permalink:"/configuration/gateway-options",editUrl:"https://github.com/graphql-portal/graphql-portal/edit/main/docs-website/docs/configuration/gateway-options.md",version:"current",frontMatter:{id:"gateway-options",title:"Gateway configuration options",sidebar_label:"Gateway Config Options"},sidebar:"docs",previous:{title:"Basic Configuration",permalink:"/configuration/basic"},next:{title:"GraphQL API Definitions",permalink:"/configuration/api-definitions"}},d=[{value:"Gateway Configuration File",id:"gateway-configuration-file",children:[]},{value:"API Configuration Files",id:"api-configuration-files",children:[]},{value:"Environment variables",id:"environment-variables",children:[]},{value:"hostname",id:"hostname",children:[]},{value:"listen_port",id:"listen_port",children:[]},{value:"servername",id:"servername",children:[]},{value:"pool_size",id:"pool_size",children:[]},{value:"use_dashboard_configs",id:"use_dashboard_configs",children:[{value:"dashboard_config",id:"dashboard_config",children:[]}]},{value:"apis_path",id:"apis_path",children:[]},{value:"middleware_path",id:"middleware_path",children:[]},{value:"sources_path",id:"sources_path",children:[]},{value:"enable_control_api",id:"enable_control_api",children:[{value:"control_api_config",id:"control_api_config",children:[]}]},{value:"cors",id:"cors",children:[{value:"enabled",id:"enabled",children:[]},{value:"origins",id:"origins",children:[]},{value:"methods",id:"methods",children:[]},{value:"allowedHeaders",id:"allowedheaders",children:[]},{value:"exposedHeaders",id:"exposedheaders",children:[]},{value:"credentials",id:"credentials",children:[]},{value:"maxAge",id:"maxage",children:[]},{value:"optionsSuccessStatus",id:"optionssuccessstatus",children:[]}]},{value:"enable_metrics_recording",id:"enable_metrics_recording",children:[]},{value:"log_format",id:"log_format",children:[]},{value:"log_level",id:"log_level",children:[]},{value:"datadog_logging",id:"datadog_logging",children:[{value:"enabled",id:"enabled-1",children:[]},{value:"apiKey",id:"apikey",children:[]},{value:"host",id:"host",children:[]},{value:"port",id:"port",children:[]},{value:"environment",id:"environment",children:[]},{value:"tags",id:"tags",children:[]}]},{value:"redis_logging",id:"redis_logging",children:[{value:"enabled",id:"enabled-2",children:[]},{value:"expire",id:"expire",children:[]}]},{value:"redis",id:"redis",children:[]},{value:"request_size_limit",id:"request_size_limit",children:[]},{value:"tracing",id:"tracing",children:[{value:"enable",id:"enable",children:[]},{value:"jaeger",id:"jaeger",children:[]},{value:"datadog",id:"datadog",children:[]}]}],p={toc:d};function c(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"gateway-configuration-file"},"Gateway Configuration File"),(0,o.kt)("p",null,"GraphQL Portal Gateway server is configured from ",(0,o.kt)("inlineCode",{parentName:"p"},"gateway.json|yaml")," file which should be located in a directory ",(0,o.kt)("inlineCode",{parentName:"p"},"./config"),"\nrelative to the command."),(0,o.kt)("p",null,"For example, if we are launching ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql-portal")," command from ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/graphql-portal")," directory, then the gateway configuration\nshould be located in ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/graphql-portal/config/gateway.json|yaml"),"."),(0,o.kt)("h2",{id:"api-configuration-files"},"API Configuration Files"),(0,o.kt)("p",null,"It is possible to use the gateway with static configuration files, in that case you have to set ",(0,o.kt)("inlineCode",{parentName:"p"},"use_dashboard_configs"),"\nto ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("p",null,"When done so, the gateway will try to load API Configurations from the directories specified in the following options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"apis_path"),(0,o.kt)("li",{parentName:"ul"},"middleware_path"),(0,o.kt)("li",{parentName:"ul"},"sources_path.")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Important")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In all of the above options, the path is relative to the directory in which we launch the gateway, i.e. if we are launching\nthe server in ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/graphql-portal")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"apis_path")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"config/apis"),", then we'll look for the files in\n",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/graphql-portal/config/apis/")," directory."))),(0,o.kt)("p",null,"The combination of these options allows us to have a flexible configuration structure with separation of concerns,\nwhich if necessary can then be versioned. Here is an example of a typical configuration structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="config/gateway.json"',title:'"config/gateway.json"'},'{\n  "use_dashboard_configs": false,\n  "apis_path": "config/apidefs",\n  "middleware_path": "config/middlewares",\n  "sources_path": "config/sources"\n}\n')),(0,o.kt)("p",null,"Our directory listing will then look like that:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"$ tree config/\nconfig\n\u251c\u2500\u2500 apidefs\n\u2502\xa0\xa0 \u2514\u2500\u2500 test-api.json\n\u251c\u2500\u2500 datasources\n\u2502\xa0\xa0 \u2514\u2500\u2500 test-data-source.yaml\n\u251c\u2500\u2500 gateway.json\n\u2514\u2500\u2500 middlewares\n")),(0,o.kt)("h2",{id:"environment-variables"},"Environment variables"),(0,o.kt)("p",null,"It is possible to override certain configuration options by using environment variables. To do that, you'll have to replace\nthe values of the variables in the configuration file with ",(0,o.kt)("inlineCode",{parentName:"p"},"@@ENV_VARIABLE_NAME"),"."),(0,o.kt)("p",null,"For example, lets take the following configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="gateway.json" {2,3,12}',title:'"gateway.json"',"{2,3,12}":!0},'{\n  "hostname": "@@HOSTNAME",\n  "listen_port": @@PORT,\n  "pool_size": 1,\n  "secret": "",\n  "apis_path": "config/apidefs",\n  "sources_path": "config/datasources",\n  "middleware_path": "config/middlewares",\n  "redis": {\n    "connection_string": "redis://localhost:6379"\n  },\n  "use_dashboard_configs": false,\n  "enable_control_api": false,\n  "log_level": "@@LOG_LEVEL"\n}\n')),(0,o.kt)("p",null,"As you can see, there are three values which were replaced with ",(0,o.kt)("inlineCode",{parentName:"p"},"@@VARIABLE"),". Values which were specified in that way are\ngoing to be taken from the environment variables."),(0,o.kt)("h2",{id:"hostname"},"hostname"),(0,o.kt)("p",null,"The hostname to bind the gateway node to."),(0,o.kt)("h2",{id:"listen_port"},"listen_port"),(0,o.kt)("p",null,"The port on which GraphQL Portal Gateway will listen for the incoming connections."),(0,o.kt)("h2",{id:"servername"},"servername"),(0,o.kt)("p",null,"Optional string. This value should be set to the external server name when gateway is used behind the load-balancer\nproxy."),(0,o.kt)("h2",{id:"pool_size"},"pool_size"),(0,o.kt)("p",null,"Optional number. The size of the NodeJS Cluster pool, i.e. how many instances of the gateway are going to be launched on the same host.\nIt is recommended to keep this number equal to the number of CPU cores on the machine. Setting this value to 1 will\nlaunch a single-instance gateway. Setting it to 0 or removing it will use all the available CPU cores on the machine."),(0,o.kt)("h2",{id:"use_dashboard_configs"},"use_dashboard_configs"),(0,o.kt)("p",null,"This boolean value specifies whether to read the API configurations from the local file or from a GraphQL Portal Dashboard."),(0,o.kt)("p",null,"If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", the gateway will try to read the configuration files locally and will search for them in the locations\nspecified in the following configuration options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"apis_path "),(0,o.kt)("li",{parentName:"ul"},"middleware_path"),(0,o.kt)("li",{parentName:"ul"},"sources_path.")),(0,o.kt)("p",null,"If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", it will try to connect to dashboard (see below for dashboard configuration) and get the configuration\nfrom there."),(0,o.kt)("h3",{id:"dashboard_config"},"dashboard_config"),(0,o.kt)("p",null,"Optional. This value will be used only when ",(0,o.kt)("inlineCode",{parentName:"p"},"use_dashboard_configs")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("p",null,"It contains a required options ",(0,o.kt)("inlineCode",{parentName:"p"},"connection_string"),", which specifies the URL and connection parameters to the Dashboard.\nExample:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "use_dashboard_configs": true,\n  "dashboard_config": {\n    "connection_string": "http://graphql-portal-dashboard.svc.local:8080"\n  }\n}\n')),(0,o.kt)("h2",{id:"apis_path"},"apis_path"),(0,o.kt)("p",null,"Path to a directory with API definition files. Read more about ",(0,o.kt)("a",{parentName:"p",href:"#api-configuration-files"},"API Configuration Files here"),"."),(0,o.kt)("h2",{id:"middleware_path"},"middleware_path"),(0,o.kt)("p",null,"Path to a directory with custom middlewares. ",(0,o.kt)("a",{parentName:"p",href:"#api-configuration-files"},"API Configuration Files here")),(0,o.kt)("h2",{id:"sources_path"},"sources_path"),(0,o.kt)("p",null,"Path to a directory with data source files. ",(0,o.kt)("a",{parentName:"p",href:"#api-configuration-files"},"API Configuration Files here")),(0,o.kt)("h2",{id:"enable_control_api"},"enable_control_api"),(0,o.kt)("p",null,"Enables or disables the Control API which is used to update GraphQL Schema definitions."),(0,o.kt)("h3",{id:"control_api_config"},"control_api_config"),(0,o.kt)("p",null,"Optional. Used only when ",(0,o.kt)("inlineCode",{parentName:"p"},"enable_control_api")," is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),". Contains only one property ",(0,o.kt)("inlineCode",{parentName:"p"},"endpoint")," which specifies\nthe URL path on which to which the Control API will be bind."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "enable_control_api": true,\n  "control_api_config": {\n    "endpoint": "/control-api"\n  }\n}\n')),(0,o.kt)("h2",{id:"cors"},"cors"),(0,o.kt)("p",null,"Optional. Enables and configures CORS requests.\nCORS requests from Dashboard are enabled by default when ",(0,o.kt)("inlineCode",{parentName:"p"},"use_dashboard_configs")," is set to true."),(0,o.kt)("h3",{id:"enabled"},"enabled"),(0,o.kt)("p",null,"Boolean, ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," by default. Enables CORS configuration."),(0,o.kt)("h3",{id:"origins"},"origins"),(0,o.kt)("p",null,"Array of strings. Configures the Access-Control-Allow-Origin CORS header. Expects an Array of valid origins."),(0,o.kt)("h3",{id:"methods"},"methods"),(0,o.kt)("p",null,"Array of strings. Configures the Access-Control-Allow-Methods CORS header. Expects an array of HTTP Methods."),(0,o.kt)("h3",{id:"allowedheaders"},"allowedHeaders"),(0,o.kt)("p",null,"Array of strings. Configures the Access-Control-Allow-Headers CORS header. Expects and Array of headers."),(0,o.kt)("h3",{id:"exposedheaders"},"exposedHeaders"),(0,o.kt)("p",null,"Array of strings. Configures the Access-Control-Expose-Headers CORS header."),(0,o.kt)("h3",{id:"credentials"},"credentials"),(0,o.kt)("p",null,"Array of strings. Configures the Access-Control-Allow-Credentials CORS header."),(0,o.kt)("h3",{id:"maxage"},"maxAge"),(0,o.kt)("p",null,"Integer. Configures the Access-Control-Max-Age CORS header."),(0,o.kt)("h3",{id:"optionssuccessstatus"},"optionsSuccessStatus"),(0,o.kt)("p",null,"Integer. Provides a status code to use for successful OPTIONS requests, since some legacy browsers (IE11, various SmartTVs)\nchoke on 204."),(0,o.kt)("h2",{id:"enable_metrics_recording"},"enable_metrics_recording"),(0,o.kt)("p",null,"Boolean. Enables metrics gathering. Disabled by default."),(0,o.kt)("h2",{id:"log_format"},"log_format"),(0,o.kt)("p",null,"Optional. Can be ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"json"),". Default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"text"),"."),(0,o.kt)("h2",{id:"log_level"},"log_level"),(0,o.kt)("p",null,"Possible values are: 'debug' | 'info' | 'warn' | 'error'."),(0,o.kt)("h2",{id:"datadog_logging"},"datadog_logging"),(0,o.kt)("p",null,"Configures sending of log messages to Datadog."),(0,o.kt)("h3",{id:"enabled-1"},"enabled"),(0,o.kt)("p",null,"Boolean. Enable or disable logging to Datadog. Defaults to false."),(0,o.kt)("h3",{id:"apikey"},"apiKey"),(0,o.kt)("p",null,"String. Datadog API key of your application."),(0,o.kt)("h3",{id:"host"},"host"),(0,o.kt)("p",null,"String. Host of the Datadog TCP (TLS) intake. Defaults to the US server (",(0,o.kt)("em",{parentName:"p"},"intake.logs.datadoghq.com"),")."),(0,o.kt)("h3",{id:"port"},"port"),(0,o.kt)("p",null,"Number. Port of the Datadog TCP (TLS) intake. Defaults to ",(0,o.kt)("em",{parentName:"p"},"10516"),"."),(0,o.kt)("h3",{id:"environment"},"environment"),(0,o.kt)("p",null,"String. Adds an environment attribute to Datadog logs. Empty by default."),(0,o.kt)("h3",{id:"tags"},"tags"),(0,o.kt)("p",null,"Array of strings. Allows transport level tagging in Datadog. Each tag should follow the format ",(0,o.kt)("inlineCode",{parentName:"p"},"<KEY>:<VALUE>"),". For more information see ",(0,o.kt)("a",{parentName:"p",href:"https://docs.datadoghq.com/getting_started/tagging/"},"https://docs.datadoghq.com/getting_started/tagging/"),"."),(0,o.kt)("h2",{id:"redis_logging"},"redis_logging"),(0,o.kt)("p",null,"Configures sending of log messages to Redis."),(0,o.kt)("h3",{id:"enabled-2"},"enabled"),(0,o.kt)("p",null,"Boolean. Enable or disable logging to Redis. Defaults to false."),(0,o.kt)("h3",{id:"expire"},"expire"),(0,o.kt)("p",null,"Number. Timeout in seconds, after the timeout has expired, the log will automatically be deleted, 30 by default."),(0,o.kt)("h2",{id:"redis"},"redis"),(0,o.kt)("p",null,"Redis connection options."),(0,o.kt)("p",null,"Connection string specifying access to a Redis instance, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "redis_connection_string": "redis://localhost:6379",\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"redis_connection_string")," is deprecated. ",(0,o.kt)("strong",{parentName:"p"},"Use")," ",(0,o.kt)("inlineCode",{parentName:"p"},"redis.connection_string")," instead:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "redis": {\n    "connection_string": "redis://localhost:6379",\n  }\n}\n')),(0,o.kt)("p",null,"If you want to connect to a ",(0,o.kt)("strong",{parentName:"p"},"Redis cluster"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "redis": {\n    "is_cluster": true,\n    "cluster_nodes": ["redis://localhost:7001", "redis://localhost:7002", "redis://localhost:7003"],\n  }\n}\n')),(0,o.kt)("h2",{id:"request_size_limit"},"request_size_limit"),(0,o.kt)("p",null,"Optional. Default value is 100kb. This value specifies an HTTP Request size limit. Accepts numeric (in bytes) or string\nvalues. When string is used, the following abbreviations are used:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"b for bytes"),(0,o.kt)("li",{parentName:"ul"},"kb for kilobytes"),(0,o.kt)("li",{parentName:"ul"},"mb for megabytes"),(0,o.kt)("li",{parentName:"ul"},"gb for gigabytes"),(0,o.kt)("li",{parentName:"ul"},"tb for terabytes"),(0,o.kt)("li",{parentName:"ul"},"pb for petabytes.")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "request_size_limit": "20mb"\n}\n')),(0,o.kt)("h2",{id:"tracing"},"tracing"),(0,o.kt)("p",null,"Optional. Configures tracing provides.\nCurrently available providers:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Jaeger"),(0,o.kt)("li",{parentName:"ul"},"Datadog")),(0,o.kt)("h3",{id:"enable"},"enable"),(0,o.kt)("p",null,"Boolean or name of provider in lowercase (",(0,o.kt)("inlineCode",{parentName:"p"},'"jaeger"')," or ",(0,o.kt)("inlineCode",{parentName:"p"},'"datadog"'),"). Enable or disable tracing. Defaults to false."),(0,o.kt)("h3",{id:"jaeger"},"jaeger"),(0,o.kt)("p",null,"Optional. Configures sending of traces to Jaeger."),(0,o.kt)("h5",{id:"host-1"},"host"),(0,o.kt)("p",null,'The host of your Jaeger agent. Defaults to "localhost".'),(0,o.kt)("h5",{id:"port-1"},"port"),(0,o.kt)("p",null,"The port of your Jaeger agent. Defaults to 6832."),(0,o.kt)("h3",{id:"datadog"},"datadog"),(0,o.kt)("p",null,"Optional. Configures sending of traces to Datadog."),(0,o.kt)("h5",{id:"host-2"},"host"),(0,o.kt)("p",null,"The host of your Datadog agent. Defaults to localhost."),(0,o.kt)("h5",{id:"port-2"},"port"),(0,o.kt)("p",null,"The port of your Datadog agent. Defaults to 8126."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "tracing": {\n    "enable": "jaeger",\n    "jaeger": {\n      "host": "@@JAEGER_AGENT_HOST",\n      "port": "@@JAEGER_AGENT_PORT",\n    },\n  }\n}\n')))}c.isMDXComponent=!0}}]);