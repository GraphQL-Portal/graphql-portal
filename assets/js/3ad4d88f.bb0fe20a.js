(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[662],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(r),m=o,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||a;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3088:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i={id:"how-it-works",title:"How it works",sidebar_label:"How It Works"},c=void 0,s={unversionedId:"overview/how-it-works",id:"overview/how-it-works",isDocsHomePage:!1,title:"How it works",description:"GraphQL Portal consists of two major components:",source:"@site/docs/overview/how-it-works.md",sourceDirName:"overview",slug:"/overview/how-it-works",permalink:"/overview/how-it-works",editUrl:"https://github.com/graphql-portal/graphql-portal/edit/main/docs-website/docs/overview/how-it-works.md",tags:[],version:"current",frontMatter:{id:"how-it-works",title:"How it works",sidebar_label:"How It Works"},sidebar:"docs",previous:{title:"Introduction",permalink:"/"},next:{title:"Quick Start",permalink:"/getting-started/quick-start"}},l=[],u={toc:l};function p(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{alt:"GraphQL Portal Schema",src:"/img/graphql-portal-schema.png"})),(0,a.kt)("p",null,"GraphQL Portal consists of two major components:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Gateway \u2013 can be launched as 1 or more instances in 1 or more servers/containers/pods;"),(0,a.kt)("li",{parentName:"ul"},"Dashboard \u2013 a backend (NestJS) and frontend (React) application that connects with Gateway nodes and works as a\nconfiguration interface for Gateways.")),(0,a.kt)("p",null,"We also plan on adding a GraphQL Registry in the future."),(0,a.kt)("p",null,"In a full-power mode, GraphQL Portal will require two more components: Redis and MongoDB."),(0,a.kt)("p",null,"Once installed and configured, the Gateway allows you to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"connect to multiple sources of data, including existing GraphQL services, REST or gRPC APIs, databases, etc;"),(0,a.kt)("li",{parentName:"ul"},"combine these data sources into universal graphs and serve them from different endpoints;"),(0,a.kt)("li",{parentName:"ul"},"apply schema transformations if necessary, cache data;"),(0,a.kt)("li",{parentName:"ul"},"protect your APIs with authentication keys;"),(0,a.kt)("li",{parentName:"ul"},"gather metrics and analytics;"),(0,a.kt)("li",{parentName:"ul"},"configure custom notifications via webhooks (coming soon).")))}p.isMDXComponent=!0}}]);